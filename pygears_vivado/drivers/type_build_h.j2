{% set caps_name = module_name.upper() %}
#ifndef {{caps_name}}_H
#define {{caps_name}}_H
#include <stdint.h>

#define {{caps_name}}_WORD_BITSIZE (sizeof(uint_fast32_t)*8)
#define {{caps_name}}_CMD_WORDS_NUM (({{dtype.width}} + {{caps_name}}_WORD_BITSIZE - 1) / {{caps_name}}_WORD_BITSIZE)
#define {{caps_name}}_CMD_SIZE ({{caps_name}}_CMD_WORDS_NUM*sizeof(uint_fast32_t))

{% for r in regs -%}

void {{module_name}}_{{r['path']}}_pset(uint_fast32_t* cmd, void* pval);

void {{module_name}}_{{r['path']}}_uset(uint_fast32_t* cmd, uint_fast32_t val);

uint_fast32_t {{module_name}}_{{r['path']}}_uget(uint_fast32_t* cmd);

{% if typeof(r['type'], Fixp) %}
void {{module_name}}_{{r['path']}}_fset(uint_fast32_t* cmd, float val);
{% endif %}

{% endfor %}

#endif
