/*
    Autogenerated driver for "{{module_name}}" module
*/

#include "{{module_name}}.h"
#include "xparameters.h"
#include "pgaxi.h"

extern {{module_name}}_Config {{module_name}}_ConfigTable[XPAR_{{module_name.upper()}}_NUM_INSTANCES];

int {{module_name}}_init_cfg({{module_name}}* h, {{module_name}}_Config* cfg) {
{% for name, p in intfdef.items() %}
  {% if p.t == 'axidma' %}
    pgaxi_init(&h->{{name}}_ctrl_h, cfg->{{name}}_ctrl_baseaddr);
  {% elif p.t == 'axi' %}
    pgaxi_init(&h->{{name}}_h, cfg->{{name}}_baseaddr);
  {% endif %}
{% endfor %}
}

int {{module_name}}_init({{module_name}}* h, unsigned device_id) {
  return {{module_name}}_init_cfg(h, &{{module_name}}_ConfigTable[device_id]);
}


{% for name, p in intfdef.items() if p.t == 'axidma'%}
void {{module_name}}_{{name}}_send({{module_name}}* h, void* data, size_t len) {
    pgaxi_dma_send(&h->{{name}}_ctrl_h, data, len);
}
{% endfor %}

{% for name, p in intfdef.items() if p.t == 'axi' and 'r' in p.direction %}
  {% set width = p.comp['rdata'].params['rdata'] %}
  {% if width < 64 %}
    {% if p.comp['araddr'].port %}
uint{{width}}_t {{module_name}}_{{name}}_read({{module_name}}* h, uintptr_t addr) {
    return pgaxi_read{{width}}(&h->{{name}}_h, addr);
}
    {% else %}
uint{{width}}_t {{module_name}}_{{name}}_read({{module_name}}* h) {
    return pgaxi_read{{width}}(&h->{{name}}_h, 0);
}
    {% endif %}
  {% endif %}
{% endfor %}

{% for name, p in intfdef.items() if p.t == 'axi' and 'w' in p.direction %}
  {% set width = p.comp['wdata'].params['wdata'] %}
  {% if width < 64 %}
    {% if p.comp['awaddr'].port %}
void {{module_name}}_{{name}}_write({{module_name}}* h, uint{{width}}_t val, uintptr_t addr) {
    pgaxi_write{{width}}(&h->{{name}}_h, val, addr);
}
    {% else %}
void {{module_name}}_{{name}}_write({{module_name}}* h, uint{{width}}_t val) {
    pgaxi_write{{width}}(&h->{{name}}_h, val, 0);
}
    {% endif %}
  {% endif %}
{% endfor %}
